<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="34">
  <CheatEntries>
    <CheatEntry>
      <ID>164</ID>
      <Description>"Ghost Info"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(address,GameAssembly.dll+EB3230)
define(bytes,40 53 48 83 EC 40)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,GameAssembly.dll+EB3230)

label(code)
label(return)
label(ghostinfo)
registersymbol(ghostinfo)
newmem:

code:
  push rbx
  sub rsp,40
  mov [ghostinfo],rcx
  jmp return
ghostinfo:
dq 0

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // push rbx
  // sub rsp,40

dealloc(newmem)


</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>165</ID>
          <Description>"Name"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:null
1:Spirit
2:Wraith
3:Phantom
4:Poltergeist
5:Banshee
6:Jinn
7:Mare
8:Revenant
9:Shade
10:Demon
11:Yurei
12:Oni
</DropDownList>
          <VariableType>String</VariableType>
          <Length>25</Length>
          <Unicode>1</Unicode>
          <CodePage>0</CodePage>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>ghostinfo</Address>
          <Offsets>
            <Offset>14</Offset>
            <Offset>30</Offset>
            <Offset>38</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>166</ID>
          <Description>"Age"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>ghostinfo</Address>
          <Offsets>
            <Offset>24</Offset>
            <Offset>38</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>167</ID>
          <Description>"Ghost Room"</Description>
          <VariableType>String</VariableType>
          <Length>25</Length>
          <Unicode>1</Unicode>
          <CodePage>0</CodePage>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>ghostinfo</Address>
          <Offsets>
            <Offset>14</Offset>
            <Offset>40</Offset>
            <Offset>58</Offset>
            <Offset>38</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>168</ID>
          <Description>"Ghost Type"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:null
1:Spirit
2:Wraith
3:Phantom
4:Poltergeist
5:Banshee
6:Djinn
7:Nightmare
8:Revenant
9:Shade
10:Demon
11:Yurei
12:Oni
</DropDownList>
          <VariableType>4 Bytes</VariableType>
          <Address>ghostinfo</Address>
          <Offsets>
            <Offset>20</Offset>
            <Offset>38</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>37</ID>
      <Description>"Sanity Hook"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(SANITY,GameAssembly.dll,F3 0F 10 B3 38 01 00 00 48 8B 88 B8 00 00 00 48 8B 01 48 85 C0 0F 84 90) // should be unique
alloc(newmem,$1000,SANITY)
alloc(find_sanity,10)

label(code)
label(return)

find_sanity:
dd 0

newmem:
mov [find_sanity],rbx
jmp code

code:
  movss xmm6,[rbx+00000138]
  jmp return

SANITY:
  jmp newmem
  nop 3
return:
registersymbol(SANITY find_sanity)

[DISABLE]

SANITY:
  db F3 0F 10 B3 38 01 00 00

unregistersymbol(SANITY find_sanity)
dealloc(newmem)
dealloc(find_sanity)
{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+D060DF

GameAssembly.dll+D060A8: 80 78 20 00              - cmp byte ptr [rax+20],00
GameAssembly.dll+D060AC: 74 0A                    - je GameAssembly.dll+D060B8
GameAssembly.dll+D060AE: F3 0F 10 8B 5C 01 00 00  - movss xmm1,[rbx+0000015C]
GameAssembly.dll+D060B6: EB 08                    - jmp GameAssembly.dll+D060C0
GameAssembly.dll+D060B8: F3 0F 10 8B 58 01 00 00  - movss xmm1,[rbx+00000158]
GameAssembly.dll+D060C0: F3 0F 59 8B 54 01 00 00  - mulss xmm1,[rbx+00000154]
GameAssembly.dll+D060C8: F3 0F 59 C8              - mulss xmm1,xmm0
GameAssembly.dll+D060CC: F3 0F 58 CE              - addss xmm1,xmm6
GameAssembly.dll+D060D0: F3 0F 11 8B 38 01 00 00  - movss [rbx+00000138],xmm1
GameAssembly.dll+D060D8: 48 8B 05 B1 E6 C1 01     - mov rax,[GameAssembly.dll+2924790]
// ---------- INJECTING HERE ----------
GameAssembly.dll+D060DF: F3 0F 10 B3 38 01 00 00  - movss xmm6,[rbx+00000138]
// ---------- DONE INJECTING  ----------
GameAssembly.dll+D060E7: 48 8B 88 B8 00 00 00     - mov rcx,[rax+000000B8]
GameAssembly.dll+D060EE: 48 8B 01                 - mov rax,[rcx]
GameAssembly.dll+D060F1: 48 85 C0                 - test rax,rax
GameAssembly.dll+D060F4: 0F 84 90 02 00 00        - je GameAssembly.dll+D0638A
GameAssembly.dll+D060FA: 80 78 20 00              - cmp byte ptr [rax+20],00
GameAssembly.dll+D060FE: B9 64 00 00 00           - mov ecx,00000064
GameAssembly.dll+D06103: BF 32 00 00 00           - mov edi,00000032
GameAssembly.dll+D06108: 0F 44 F9                 - cmove edi,ecx
GameAssembly.dll+D0610B: 48 8B 0D FE 0A C3 01     - mov rcx,[GameAssembly.dll+2936C10]
GameAssembly.dll+D06112: F6 81 2F 01 00 00 02     - test byte ptr [rcx+0000012F],02
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>38</ID>
          <Description>"Insanity Level"</Description>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>find_sanity</Address>
          <Offsets>
            <Offset>138</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Super Sprint (3x Speed)"</Description>
      <LastState/>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Phasmophobia.exe
  Version: 
  Date   : 2020-11-04
  Author : C130s

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(speedsprint,GameAssembly.dll,F3 44 0F 10 4F 20 F3 0F) // should be unique
alloc(newmem,$100,"GameAssembly.dll"+1416CE0)


label(code)
label(return)


newmem:
push ebx
mov ebx,(float)4.8
movd xmm9,ebx
pop ebx
  jmp return

code:
  movss xmm9,[rdi+20]
  jmp return

speedsprint:
  jmp newmem
  nop
return:
registersymbol(speedsprint)

[DISABLE]

speedsprint:
  db F3 44 0F 10 4F 20

unregistersymbol(speedsprint)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GameAssembly.dll"+1416CE0

"GameAssembly.dll"+1416CBB: 48 89 45 A0                 -  mov [rbp-60],rax
"GameAssembly.dll"+1416CBF: 89 45 A8                    -  mov [rbp-58],eax
"GameAssembly.dll"+1416CC2: 48 89 44 24 50              -  mov [rsp+50],rax
"GameAssembly.dll"+1416CC7: 89 44 24 58                 -  mov [rsp+58],eax
"GameAssembly.dll"+1416CCB: 48 89 44 24 40              -  mov [rsp+40],rax
"GameAssembly.dll"+1416CD0: 89 44 24 48                 -  mov [rsp+48],eax
"GameAssembly.dll"+1416CD4: 84 DB                       -  test bl,bl
"GameAssembly.dll"+1416CD6: 74 08                       -  je GameAssembly.dll+1416CE0
"GameAssembly.dll"+1416CD8: F3 44 0F 10 4F 1C           -  movss xmm9,[rdi+1C]
"GameAssembly.dll"+1416CDE: EB 06                       -  jmp GameAssembly.dll+1416CE6
// ---------- INJECTING HERE ----------
"GameAssembly.dll"+1416CE0: F3 44 0F 10 4F 20           -  movss xmm9,[rdi+20]
// ---------- DONE INJECTING  ----------
"GameAssembly.dll"+1416CE6: F3 0F 10 97 C4 00 00 00     -  movss xmm2,[rdi+000000C4]
"GameAssembly.dll"+1416CEE: 48 8D 4D 40                 -  lea rcx,[rbp+40]
"GameAssembly.dll"+1416CF2: F3 0F 10 8F C0 00 00 00     -  movss xmm1,[rdi+000000C0]
"GameAssembly.dll"+1416CFA: 45 33 C9                    -  xor r9d,r9d
"GameAssembly.dll"+1416CFD: 48 89 45 40                 -  mov [rbp+40],rax
"GameAssembly.dll"+1416D01: E8 BA 42 26 00              -  call GameAssembly.dll+167AFC0
"GameAssembly.dll"+1416D06: F3 0F 10 45 40              -  movss xmm0,[rbp+40]
"GameAssembly.dll"+1416D0B: 48 8D B7 80 00 00 00        -  lea rsi,[rdi+00000080]
"GameAssembly.dll"+1416D12: F3 0F 10 4D 44              -  movss xmm1,[rbp+44]
"GameAssembly.dll"+1416D17: 48 8B CE                    -  mov rcx,rsi
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys/>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Faster Walk (normal sprint speed)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Phasmophobia.exe
  Version: 
  Date   : 2020-11-04
  Author : C130s

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(speedwalk,GameAssembly.dll,F3 44 0F 10 4F 1C EB) // should be unique
alloc(newmem,$100,"GameAssembly.dll"+1416CD8)

label(code)
label(return)

newmem:
push rax
mov rax,(float)1.6
movd xmm9,rax
pop rax
jmp return

code:
  movss xmm9,[rdi+1C]
  jmp return

speedwalk:
  jmp newmem
  nop
return:
registersymbol(speedwalk)

[DISABLE]

speedwalk:
  db F3 44 0F 10 4F 1C

unregistersymbol(speedwalk)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GameAssembly.dll"+1416CD8

"GameAssembly.dll"+1416CB3: 48 89 45 90                 -  mov [rbp-70],rax
"GameAssembly.dll"+1416CB7: 48 89 45 98                 -  mov [rbp-68],rax
"GameAssembly.dll"+1416CBB: 48 89 45 A0                 -  mov [rbp-60],rax
"GameAssembly.dll"+1416CBF: 89 45 A8                    -  mov [rbp-58],eax
"GameAssembly.dll"+1416CC2: 48 89 44 24 50              -  mov [rsp+50],rax
"GameAssembly.dll"+1416CC7: 89 44 24 58                 -  mov [rsp+58],eax
"GameAssembly.dll"+1416CCB: 48 89 44 24 40              -  mov [rsp+40],rax
"GameAssembly.dll"+1416CD0: 89 44 24 48                 -  mov [rsp+48],eax
"GameAssembly.dll"+1416CD4: 84 DB                       -  test bl,bl
"GameAssembly.dll"+1416CD6: 74 08                       -  je GameAssembly.dll+1416CE0
// ---------- INJECTING HERE ----------
"GameAssembly.dll"+1416CD8: F3 44 0F 10 4F 1C           -  movss xmm9,[rdi+1C]
// ---------- DONE INJECTING  ----------
"GameAssembly.dll"+1416CDE: EB 06                       -  jmp GameAssembly.dll+1416CE6
"GameAssembly.dll"+1416CE0: F3 44 0F 10 4F 20           -  movss xmm9,[rdi+20]
"GameAssembly.dll"+1416CE6: F3 0F 10 97 C4 00 00 00     -  movss xmm2,[rdi+000000C4]
"GameAssembly.dll"+1416CEE: 48 8D 4D 40                 -  lea rcx,[rbp+40]
"GameAssembly.dll"+1416CF2: F3 0F 10 8F C0 00 00 00     -  movss xmm1,[rdi+000000C0]
"GameAssembly.dll"+1416CFA: 45 33 C9                    -  xor r9d,r9d
"GameAssembly.dll"+1416CFD: 48 89 45 40                 -  mov [rbp+40],rax
"GameAssembly.dll"+1416D01: E8 BA 42 26 00              -  call GameAssembly.dll+167AFC0
"GameAssembly.dll"+1416D06: F3 0F 10 45 40              -  movss xmm0,[rbp+40]
"GameAssembly.dll"+1416D0B: 48 8D B7 80 00 00 00        -  lea rsi,[rdi+00000080]
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys/>
          <ID>0</ID>
          <ActivateSound>Activate</ActivateSound>
          <DeactivateSound>Deactivate</DeactivateSound>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>22</ID>
      <Description>"Player Coordinates Hook"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(COORDS,UnityPlayer.dll,F2 0F 10 30 F2 0F 10 78 08) // should be unique
alloc(newmem,$1000,COORDS)
alloc(find_coords,10)
alloc(storecoords,256)

label(code)
label(return)
label(save)
label(load)
label(xpos)
label(ypos)
label(zpos)
label(enable_save)
label(enable_load)

find_coords:
dd 0
storecoords:
xpos:
dd 0
ypos:
dd 0
zpos:
dd 0
enable_save:
dd 0
enable_load:
dd 0

newmem:
mov [find_coords],rax
cmp [enable_save],1
je save
cmp [enable_load],1
je load
jmp code

save:
mov [enable_save],0
push rbx
mov rbx,[rax+14]
mov [xpos],rbx
mov rbx,[rax+0C]
mov [ypos],rbx
mov rbx,[rax+4]
mov [zpos],rbx
pop rbx
jmp code

load:
mov [enable_load],0
push rbx
mov rbx,[xpos]
mov [rax+14],rbx
mov rbx,[ypos]
mov [rax+0C],rbx
mov rbx,[zpos]
mov [rax+4],rbx
pop rbx
jmp code

code:
  movsd xmm6,[rax]
  movsd xmm7,[rax+08]
  jmp return

COORDS:
  jmp newmem
  nop 4
return:
registersymbol(COORDS find_coords xpos ypos zpos enable_save enable_load)

[DISABLE]

COORDS:
  db F2 0F 10 30 F2 0F 10 78 08

unregistersymbol(COORDS find_coords xpos ypos zpos enable_save enable_load)
dealloc(newmem)
dealloc(find_coords)
dealloc(storecoords)
{
// ORIGINAL CODE - INJECTION POINT: UnityPlayer.dll+846CBD

UnityPlayer.dll+846C95: E8 A6 E8 FE FF     - call UnityPlayer.dll+835540
UnityPlayer.dll+846C9A: 48 8B C8           - mov rcx,rax
UnityPlayer.dll+846C9D: E8 AE 14 FF FF     - call UnityPlayer.dll+838150
UnityPlayer.dll+846CA2: E8 99 E8 FE FF     - call UnityPlayer.dll+835540
UnityPlayer.dll+846CA7: 48 8B C8           - mov rcx,rax
UnityPlayer.dll+846CAA: E8 01 CA FE FF     - call UnityPlayer.dll+8336B0
UnityPlayer.dll+846CAF: 49 8B 4D 70        - mov rcx,[r13+70]
UnityPlayer.dll+846CB3: 48 8B 01           - mov rax,[rcx]
UnityPlayer.dll+846CB6: FF 50 20           - call qword ptr [rax+20]
UnityPlayer.dll+846CB9: 49 8B 4D 70        - mov rcx,[r13+70]
// ---------- INJECTING HERE ----------
UnityPlayer.dll+846CBD: F2 0F 10 30        - movsd xmm6,[rax]
// ---------- DONE INJECTING  ----------
UnityPlayer.dll+846CC1: F2 0F 10 78 08     - movsd xmm7,[rax+08]
UnityPlayer.dll+846CC6: F2 44 0F 10 40 10  - movsd xmm8,[rax+10]
UnityPlayer.dll+846CCC: 48 8B 01           - mov rax,[rcx]
UnityPlayer.dll+846CCF: 66 0F 5A F6        - cvtpd2ps xmm6,xmm6
UnityPlayer.dll+846CD3: 66 0F 5A FF        - cvtpd2ps xmm7,xmm7
UnityPlayer.dll+846CD7: 66 45 0F 5A C0     - cvtpd2ps xmm8,xmm8
UnityPlayer.dll+846CDC: FF 90 90 00 00 00  - call qword ptr [rax+00000090]
UnityPlayer.dll+846CE2: 49 8B 4D 48        - mov rcx,[r13+48]
UnityPlayer.dll+846CE6: 48 8D 55 20        - lea rdx,[rbp+20]
UnityPlayer.dll+846CEA: 48 8B 01           - mov rax,[rcx]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>27</ID>
          <Description>"Xpos"</Description>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>find_coords</Address>
          <Offsets>
            <Offset>14</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Decrease Value</Action>
              <Keys>
                <Key>16</Key>
                <Key>37</Key>
              </Keys>
              <Value>0.04</Value>
              <Description>-xpos</Description>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Increase Value</Action>
              <Keys>
                <Key>16</Key>
                <Key>39</Key>
              </Keys>
              <Value>0.04</Value>
              <Description>+xpos</Description>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Ypos"</Description>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>find_coords</Address>
          <Offsets>
            <Offset>c</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Increase Value</Action>
              <Keys>
                <Key>16</Key>
                <Key>73</Key>
              </Keys>
              <Value>0.05</Value>
              <Description>+ypos</Description>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Decrease Value</Action>
              <Keys>
                <Key>16</Key>
                <Key>79</Key>
              </Keys>
              <Value>0.05</Value>
              <Description>-ypos</Description>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"Zpos"</Description>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>find_coords</Address>
          <Offsets>
            <Offset>4</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Decrease Value</Action>
              <Keys>
                <Key>16</Key>
                <Key>38</Key>
              </Keys>
              <Value>0.04</Value>
              <Description>-zpos</Description>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Increase Value</Action>
              <Keys>
                <Key>16</Key>
                <Key>40</Key>
              </Keys>
              <Value>0.04</Value>
              <Description>+zpos</Description>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"Save Coordinates (1)"</Description>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>enable_save</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>49</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
              <ActivateSound>Activate</ActivateSound>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"Load Coordinates (2)"</Description>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>enable_load</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>50</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
              <ActivateSound>Activate</ActivateSound>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Money &amp; EXP Hook"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(moneyexp,GameAssembly.dll,00 02 00 00 8B 40 18 48 8D 54 24 50) // should be unique
alloc(newmem,$1000,"GameAssembly.dll"+2821C3)
alloc(find_money,10)
alloc(find_exp,10)

label(code)
label(return)
label(exp)

find_money:
dd 0
find_exp:
dd 0

newmem:
cmp [rax+A4],0
je exp
mov [find_money],rax
jmp code

exp:
mov [find_exp],rax
jmp code

code:
  mov eax,[rax+18]
  lea rdx,[rsp+50]
  jmp return

moneyexp+04:
  jmp newmem
  nop 3
return:
registersymbol(moneyexp find_money find_exp)

[DISABLE]

moneyexp+04:
  db 8B 40 18 48 8D 54 24 50

unregistersymbol(moneyexp find_money find_exp)
dealloc(newmem)
dealloc(find_money)
dealloc(find_exp)

{
// ORIGINAL CODE - INJECTION POINT: "GameAssembly.dll"+2821C3

"GameAssembly.dll"+282199: 48 85 C9              -  test rcx,rcx
"GameAssembly.dll"+28219C: 75 A8                 -  jne GameAssembly.dll+282146
"GameAssembly.dll"+28219E: E9 EA 01 00 00        -  jmp GameAssembly.dll+28238D
"GameAssembly.dll"+2821A3: 48 85 C9              -  test rcx,rcx
"GameAssembly.dll"+2821A6: 0F 84 17 02 00 00     -  je GameAssembly.dll+2823C3
"GameAssembly.dll"+2821AC: 3B 79 18              -  cmp edi,[rcx+18]
"GameAssembly.dll"+2821AF: 0F 83 FE 01 00 00     -  jae GameAssembly.dll+2823B3
"GameAssembly.dll"+2821B5: 48 8B 44 F1 20        -  mov rax,[rcx+rsi*8+20]
"GameAssembly.dll"+2821BA: 48 85 C0              -  test rax,rax
"GameAssembly.dll"+2821BD: 0F 84 00 02 00 00     -  je GameAssembly.dll+2823C3
// ---------- INJECTING HERE ----------
"GameAssembly.dll"+2821C3: 8B 40 18              -  mov eax,[rax+18]
"GameAssembly.dll"+2821C6: 48 8D 54 24 50        -  lea rdx,[rsp+50]
// ---------- DONE INJECTING  ----------
"GameAssembly.dll"+2821CB: 48 8B 0D 86 2E 59 02  -  mov rcx,[GameAssembly.dll+2815058]
"GameAssembly.dll"+2821D2: 89 44 24 50           -  mov [rsp+50],eax
"GameAssembly.dll"+2821D6: E8 55 3A DC FF        -  call GameAssembly.dll+45C30
"GameAssembly.dll"+2821DB: E9 94 01 00 00        -  jmp GameAssembly.dll+282374
"GameAssembly.dll"+2821E0: 48 8B 05 71 09 59 02  -  mov rax,[GameAssembly.dll+2812B58]
"GameAssembly.dll"+2821E7: 48 8B CB              -  mov rcx,rbx
"GameAssembly.dll"+2821EA: 49 39 06              -  cmp [r14],rax
"GameAssembly.dll"+2821ED: 49 0F 44 CE           -  cmove rcx,r14
"GameAssembly.dll"+2821F1: 48 85 C9              -  test rcx,rcx
"GameAssembly.dll"+2821F4: 0F 84 B4 00 00 00     -  je GameAssembly.dll+2822AE
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>55</Key>
          </Keys>
          <Description>FREE STORE(dont use in hunt)</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Money"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>find_money</Address>
          <Offsets>
            <Offset>18</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>55</Key>
              </Keys>
              <Description>frestorefreeze</Description>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"EXP"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>find_exp</Address>
          <Offsets>
            <Offset>18</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"Infinite Salt"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(SALT,GameAssembly.dll,CC CC CC CC CC CC CC CC 40 57 48 83 EC 20 FF 49 50) // should be unique
alloc(newmem,$1000,"GameAssembly.dll"+10B48E2)

label(code)
label(return)

newmem:

code:
  sub rsp,20
  mov [rcx+50],#99
  dec [rcx+50]
  jmp return

SALT+0A:
  jmp newmem
  nop 2
return:
registersymbol(SALT)

[DISABLE]

SALT+0A:
  db 48 83 EC 20 FF 49 50

unregistersymbol(SALT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GameAssembly.dll"+10B48E2

"GameAssembly.dll"+10B48D7: CC                    -  int 3 
"GameAssembly.dll"+10B48D8: CC                    -  int 3 
"GameAssembly.dll"+10B48D9: CC                    -  int 3 
"GameAssembly.dll"+10B48DA: CC                    -  int 3 
"GameAssembly.dll"+10B48DB: CC                    -  int 3 
"GameAssembly.dll"+10B48DC: CC                    -  int 3 
"GameAssembly.dll"+10B48DD: CC                    -  int 3 
"GameAssembly.dll"+10B48DE: CC                    -  int 3 
"GameAssembly.dll"+10B48DF: CC                    -  int 3 
"GameAssembly.dll"+10B48E0: 40 57                 -  push rdi
// ---------- INJECTING HERE ----------
"GameAssembly.dll"+10B48E2: 48 83 EC 20           -  sub rsp,20
"GameAssembly.dll"+10B48E6: FF 49 50              -  dec [rcx+50]
// ---------- DONE INJECTING  ----------
"GameAssembly.dll"+10B48E9: 48 8B F9              -  mov rdi,rcx
"GameAssembly.dll"+10B48EC: 48 8B 49 28           -  mov rcx,[rcx+28]
"GameAssembly.dll"+10B48F0: 48 85 C9              -  test rcx,rcx
"GameAssembly.dll"+10B48F3: 0F 84 8D 00 00 00     -  je GameAssembly.dll+10B4986
"GameAssembly.dll"+10B48F9: 33 D2                 -  xor edx,edx
"GameAssembly.dll"+10B48FB: 48 89 5C 24 30        -  mov [rsp+30],rbx
"GameAssembly.dll"+10B4900: E8 1B FA A3 FF        -  call GameAssembly.dll+AF4320
"GameAssembly.dll"+10B4905: 80 3D 2E 15 86 01 00  -  cmp byte ptr [GameAssembly.dll+2915E3A],00
"GameAssembly.dll"+10B490C: 75 12                 -  jne GameAssembly.dll+10B4920
"GameAssembly.dll"+10B490E: 8B 0D E0 00 11 01     -  mov ecx,[GameAssembly.dll+21C49F4]
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>57</Key>
          </Keys>
          <Description>INF SALT</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>140</ID>
      <Description>"Super Glowstick (holding)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Phasmophobia.exe
  Version: 
  Date   : 2020-11-04
  Author : C130s

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(glow1,GameAssembly.dll,F3 0F 10 0D 9C A9 79 00) // should be unique
alloc(newmem,$1000,glow1)

label(code)
label(return)

newmem:
push rbx
mov rbx,(float)25.0
movd xmm1,rbx
pop rbx
jmp return

code:
  movss xmm1,[GameAssembly.dll+20A6690]
  jmp return

glow1:
  jmp newmem
  nop 3
return:
registersymbol(glow1)

[DISABLE]

glow1:
  db F3 0F 10 0D 9C A9 79 00

unregistersymbol(glow1)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+190BCEC

GameAssembly.dll+190BCDA: CC                       - int 3 
GameAssembly.dll+190BCDB: CC                       - int 3 
GameAssembly.dll+190BCDC: CC                       - int 3 
GameAssembly.dll+190BCDD: CC                       - int 3 
GameAssembly.dll+190BCDE: CC                       - int 3 
GameAssembly.dll+190BCDF: CC                       - int 3 
Glowstick.SyncGrab: 48 83 EC 28              - sub rsp,28
GameAssembly.dll+190BCE4: 48 8B 49 18              - mov rcx,[rcx+18]
GameAssembly.dll+190BCE8: 84 D2                    - test dl,dl
GameAssembly.dll+190BCEA: 74 0A                    - je GameAssembly.dll+190BCF6
// ---------- INJECTING HERE ----------
GameAssembly.dll+190BCEC: F3 0F 10 0D 9C A9 79 00  - movss xmm1,[GameAssembly.dll+20A6690]
// ---------- DONE INJECTING  ----------
GameAssembly.dll+190BCF4: EB 08                    - jmp GameAssembly.dll+190BCFE
GameAssembly.dll+190BCF6: F3 0F 10 0D BA A9 79 00  - movss xmm1,[GameAssembly.dll+20A66B8]
GameAssembly.dll+190BCFE: 48 85 C9                 - test rcx,rcx
GameAssembly.dll+190BD01: 74 0C                    - je GameAssembly.dll+190BD0F
GameAssembly.dll+190BD03: 45 33 C0                 - xor r8d,r8d
GameAssembly.dll+190BD06: 48 83 C4 28              - add rsp,28
GameAssembly.dll+190BD0A: E9 F1 FB 05 FF           - jmp UnityEngine.Light.set_range
GameAssembly.dll+190BD0F: E8 BC 89 7C FE           - call GameAssembly.dll+D46D0
GameAssembly.dll+190BD14: CC                       - int 3 
GameAssembly.dll+190BD15: CC                       - int 3 
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>53</Key>
          </Keys>
          <Description>superglowstick inhand</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>141</ID>
      <Description>"Super Glowstick (on ground)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Phasmophobia.exe
  Version: 
  Date   : 2020-11-04
  Author : C130s

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(glow2,GameAssembly.dll,F3 0F 10 0D BA A9 79 00) // should be unique
alloc(newmem,$1000,glow2)

label(code)
label(return)

newmem:
push ebx
mov ebx,(float)25.0
movd xmm1,ebx
pop ebx
jmp return

code:
  movss xmm1,[GameAssembly.dll+20A66B8]
  jmp return

glow2:
  jmp newmem
  nop 3
return:
registersymbol(glow2)

[DISABLE]

glow2:
  db F3 0F 10 0D BA A9 79 00

unregistersymbol(glow2)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+190BCF6

GameAssembly.dll+190BCDC: CC                       - int 3 
GameAssembly.dll+190BCDD: CC                       - int 3 
GameAssembly.dll+190BCDE: CC                       - int 3 
GameAssembly.dll+190BCDF: CC                       - int 3 
Glowstick.SyncGrab: 48 83 EC 28              - sub rsp,28
GameAssembly.dll+190BCE4: 48 8B 49 18              - mov rcx,[rcx+18]
GameAssembly.dll+190BCE8: 84 D2                    - test dl,dl
GameAssembly.dll+190BCEA: 74 0A                    - je GameAssembly.dll+190BCF6
GameAssembly.dll+190BCEC: F3 0F 10 0D 9C A9 79 00  - movss xmm1,[GameAssembly.dll+20A6690]
GameAssembly.dll+190BCF4: EB 08                    - jmp GameAssembly.dll+190BCFE
// ---------- INJECTING HERE ----------
GameAssembly.dll+190BCF6: F3 0F 10 0D BA A9 79 00  - movss xmm1,[GameAssembly.dll+20A66B8]
// ---------- DONE INJECTING  ----------
GameAssembly.dll+190BCFE: 48 85 C9                 - test rcx,rcx
GameAssembly.dll+190BD01: 74 0C                    - je GameAssembly.dll+190BD0F
GameAssembly.dll+190BD03: 45 33 C0                 - xor r8d,r8d
GameAssembly.dll+190BD06: 48 83 C4 28              - add rsp,28
GameAssembly.dll+190BD0A: E9 F1 FB 05 FF           - jmp UnityEngine.Light.set_range
GameAssembly.dll+190BD0F: E8 BC 89 7C FE           - call GameAssembly.dll+D46D0
GameAssembly.dll+190BD14: CC                       - int 3 
GameAssembly.dll+190BD15: CC                       - int 3 
GameAssembly.dll+190BD16: CC                       - int 3 
GameAssembly.dll+190BD17: CC                       - int 3 
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>54</Key>
          </Keys>
          <Description>superglowstich onground</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Infinite Pictures"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(PICS,GameAssembly.dll,89 46 58 85 D2) // should be unique
alloc(newmem,$1000,"GameAssembly.dll"+BE05DD)

label(code)
label(return)

newmem:

code:
  mov eax,#9
  mov [rsi+58],eax
  test edx,edx
  jmp return

PICS:
  jmp newmem
return:
registersymbol(PICS)

[DISABLE]

PICS:
  db 89 46 58 85 D2

unregistersymbol(PICS)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GameAssembly.dll"+BE05DD

"GameAssembly.dll"+BE05B5: 48 8B 4E 20           -  mov rcx,[rsi+20]
"GameAssembly.dll"+BE05B9: 48 85 C9              -  test rcx,rcx
"GameAssembly.dll"+BE05BC: 0F 84 3C 0A 00 00     -  je GameAssembly.dll+BE0FFE
"GameAssembly.dll"+BE05C2: 33 D2                 -  xor edx,edx
"GameAssembly.dll"+BE05C4: E8 27 87 AD FF        -  call GameAssembly.dll+6B8CF0
"GameAssembly.dll"+BE05C9: 8B 56 58              -  mov edx,[rsi+58]
"GameAssembly.dll"+BE05CC: 45 33 F6              -  xor r14d,r14d
"GameAssembly.dll"+BE05CF: 4C 8B 25 AA 69 C3 01  -  mov r12,[GameAssembly.dll+2816F80]
"GameAssembly.dll"+BE05D6: 44 89 75 30           -  mov [rbp+30],r14d
"GameAssembly.dll"+BE05DA: 8D 42 FF              -  lea eax,[rdx-01]
// ---------- INJECTING HERE ----------
"GameAssembly.dll"+BE05DD: 89 46 58              -  mov [rsi+58],eax
"GameAssembly.dll"+BE05E0: 85 D2                 -  test edx,edx
// ---------- DONE INJECTING  ----------
"GameAssembly.dll"+BE05E2: 7E 2F                 -  jle GameAssembly.dll+BE0613
"GameAssembly.dll"+BE05E4: 48 8B 5E 60           -  mov rbx,[rsi+60]
"GameAssembly.dll"+BE05E8: 48 8D 4E 58           -  lea rcx,[rsi+58]
"GameAssembly.dll"+BE05EC: 33 D2                 -  xor edx,edx
"GameAssembly.dll"+BE05EE: E8 AD C9 49 00        -  call GameAssembly.dll+107CFA0
"GameAssembly.dll"+BE05F3: 48 85 DB              -  test rbx,rbx
"GameAssembly.dll"+BE05F6: 0F 84 02 0A 00 00     -  je GameAssembly.dll+BE0FFE
"GameAssembly.dll"+BE05FC: 4C 8B 0B              -  mov r9,[rbx]
"GameAssembly.dll"+BE05FF: 48 8B D0              -  mov rdx,rax
"GameAssembly.dll"+BE0602: 48 8B CB              -  mov rcx,rbx
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>57</Key>
          </Keys>
          <Description>INF PICTURES</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>211</ID>
      <Description>"Fast Camera"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(fastcam,GameAssembly.dll,76 0B C6 43 54 01 C7 43 50 00 00 40) // should be unique
alloc(newmem,$1000,"GameAssembly.dll"+15C1084)

label(code)
label(return)

newmem:

code:
  //jna GameAssembly.dll+15E4871
  mov byte ptr [rbx+54],01
  jmp return

fastcam:
  jmp newmem
  nop
return:
registersymbol(fastcam)

[DISABLE]

fastcam:
  db 76 0B C6 43 54 01

unregistersymbol(fastcam)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GameAssembly.dll"+15E4864

"GameAssembly.dll"+15E483D: 75 32                 -  jne GameAssembly.dll+15E4871
"GameAssembly.dll"+15E483F: 0F 29 74 24 20        -  movaps [rsp+20],xmm6
"GameAssembly.dll"+15E4844: F3 0F 10 71 50        -  movss xmm6,[rcx+50]
"GameAssembly.dll"+15E4849: 33 C9                 -  xor ecx,ecx
"GameAssembly.dll"+15E484B: E8 F0 BB 2F FF        -  call GameAssembly.dll+8E0440
"GameAssembly.dll"+15E4850: F3 0F 5C F0           -  subss xmm6,xmm0
"GameAssembly.dll"+15E4854: 0F 57 C0              -  xorps xmm0,xmm0
"GameAssembly.dll"+15E4857: F3 0F 11 73 50        -  movss [rbx+50],xmm6
"GameAssembly.dll"+15E485C: 0F 2F C6              -  comiss xmm0,xmm6
"GameAssembly.dll"+15E485F: 0F 28 74 24 20        -  movaps xmm6,[rsp+20]
// ---------- INJECTING HERE ----------
"GameAssembly.dll"+15E4864: 76 0B                 -  jna GameAssembly.dll+15E4871
"GameAssembly.dll"+15E4866: C6 43 54 01           -  mov byte ptr [rbx+54],01
// ---------- DONE INJECTING  ----------
"GameAssembly.dll"+15E486A: C7 43 50 00 00 40 40  -  mov [rbx+50],40400000
"GameAssembly.dll"+15E4871: 48 83 C4 30           -  add rsp,30
"GameAssembly.dll"+15E4875: 5B                    -  pop rbx
"GameAssembly.dll"+15E4876: C3                    -  ret 
"GameAssembly.dll"+15E4877: CC                    -  int 3 
"GameAssembly.dll"+15E4878: CC                    -  int 3 
"GameAssembly.dll"+15E4879: CC                    -  int 3 
"GameAssembly.dll"+15E487A: CC                    -  int 3 
"GameAssembly.dll"+15E487B: CC                    -  int 3 
"GameAssembly.dll"+15E487C: CC                    -  int 3 
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>57</Key>
          </Keys>
          <Description>FAST CAMRA</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>212</ID>
      <Description>"Hoop Score"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(score,GameAssembly.dll,FF 47 18 48 8D 4F 18 48 8B 77 20 33 D2 E8 8A 41) // should be unique
alloc(newmem,$1000,score)
alloc(get_score,10)

label(code)
label(return)

get_score:
dd 0

newmem:
mov [get_score],rdi
jmp code

code:
  inc [rdi+18]
  lea rcx,[rdi+18]
  jmp return

score:
  jmp newmem
  nop 2
return:
registersymbol(score get_score)

[DISABLE]

score:
  db FF 47 18 48 8D 4F 18

unregistersymbol(score get_score)
dealloc(newmem)
dealloc(get_score)
{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+15C8C94

GameAssembly.dll+15C8C6B: 48 8B 0D 0E 2B 36 01  - mov rcx,[GameAssembly.dll+292B780]
GameAssembly.dll+15C8C72: F6 81 2F 01 00 00 02  - test byte ptr [rcx+0000012F],02
GameAssembly.dll+15C8C79: 74 0E                 - je GameAssembly.dll+15C8C89
GameAssembly.dll+15C8C7B: 83 B9 E0 00 00 00 00  - cmp dword ptr [rcx+000000E0],00
GameAssembly.dll+15C8C82: 75 05                 - jne GameAssembly.dll+15C8C89
GameAssembly.dll+15C8C84: E8 77 28 A9 FE        - call GameAssembly.il2cpp_runtime_class_init
GameAssembly.dll+15C8C89: 33 C9                 - xor ecx,ecx
GameAssembly.dll+15C8C8B: E8 40 A1 FE FE        - call GameAssembly.dll+5B2DD0
GameAssembly.dll+15C8C90: 84 C0                 - test al,al
GameAssembly.dll+15C8C92: 75 59                 - jne GameAssembly.dll+15C8CED
// ---------- INJECTING HERE ----------
GameAssembly.dll+15C8C94: FF 47 18              - inc [rdi+18]
// ---------- DONE INJECTING  ----------
GameAssembly.dll+15C8C97: 48 8D 4F 18           - lea rcx,[rdi+18]
GameAssembly.dll+15C8C9B: 48 8B 77 20           - mov rsi,[rdi+20]
GameAssembly.dll+15C8C9F: 33 D2                 - xor edx,edx
GameAssembly.dll+15C8CA1: E8 8A 41 06 FF        - call GameAssembly.dll+62CE30
GameAssembly.dll+15C8CA6: 48 85 F6              - test rsi,rsi
GameAssembly.dll+15C8CA9: 74 52                 - je GameAssembly.dll+15C8CFD
GameAssembly.dll+15C8CAB: 4C 8B 0E              - mov r9,[rsi]
GameAssembly.dll+15C8CAE: 48 8B D0              - mov rdx,rax
GameAssembly.dll+15C8CB1: 48 8B CE              - mov rcx,rsi
GameAssembly.dll+15C8CB4: 4D 8B 81 C8 05 00 00  - mov r8,[r9+000005C8]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>213</ID>
          <Description>"Score Once to Populate Value"</Description>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>get_score</Address>
          <Offsets>
            <Offset>18</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>214</ID>
      <Description>"FLY/ ONLY MOVE WITH PLAYER COORD HK's"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Phasmophobia.exe
  Version: 
  Date   : 2020-12-04
  Author : Ry

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(nogrv,UnityPlayer.dll,41 0F 11 86 F0 01 00 00) // should be unique
alloc(newmem,$1000,nogrv)

label(code)
label(return)

newmem:

code:
  //movups [r14+000001F0],xmm0
  jmp return

nogrv:
  jmp newmem
  nop 3
return:
registersymbol(nogrv)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
nogrv:
  db 41 0F 11 86 F0 01 00 00

unregistersymbol(nogrv)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: UnityPlayer.dll+101784B

UnityPlayer.dll+1017815: 74 0F                       - je UnityPlayer.dll+1017826
UnityPlayer.dll+1017817: 49 8B 8E 20 01 00 00        - mov rcx,[r14+00000120]
UnityPlayer.dll+101781E: 48 8B D3                    - mov rdx,rbx
UnityPlayer.dll+1017821: E8 2A 75 FF FF              - call UnityPlayer.dll+100ED50
UnityPlayer.dll+1017826: 41 0F B6 07                 - movzx eax,byte ptr [r15]
UnityPlayer.dll+101782A: 49 89 9E 10 01 00 00        - mov [r14+00000110],rbx
UnityPlayer.dll+1017831: 48 8B 9C 24 A8 02 00 00     - mov rbx,[rsp+000002A8]
UnityPlayer.dll+1017839: 41 88 86 48 02 00 00        - mov [r14+00000248],al
UnityPlayer.dll+1017840: 0F 10 47 08                 - movups xmm0,[rdi+08]
UnityPlayer.dll+1017844: 49 8B 8E E8 01 00 00        - mov rcx,[r14+000001E8]
// ---------- INJECTING HERE ----------
UnityPlayer.dll+101784B: 41 0F 11 86 F0 01 00 00     - movups [r14+000001F0],xmm0
// ---------- DONE INJECTING  ----------
UnityPlayer.dll+1017853: F2 0F 10 4F 18              - movsd xmm1,[rdi+18]
UnityPlayer.dll+1017858: F2 41 0F 11 8E 00 02 00 00  - movsd [r14+00000200],xmm1
UnityPlayer.dll+1017861: 48 85 C9                    - test rcx,rcx
UnityPlayer.dll+1017864: 0F 84 A8 00 00 00           - je UnityPlayer.dll+1017912
UnityPlayer.dll+101786A: F2 0F 10 44 24 78           - movsd xmm0,[rsp+78]
UnityPlayer.dll+1017870: F2 0F 5C 47 08              - subsd xmm0,[rdi+08]
UnityPlayer.dll+1017875: F2 0F 10 4D 80              - movsd xmm1,[rbp-80]
UnityPlayer.dll+101787A: F2 0F 5C 4F 10              - subsd xmm1,[rdi+10]
UnityPlayer.dll+101787F: 66 0F 5A D0                 - cvtpd2ps xmm2,xmm0
UnityPlayer.dll+1017883: F2 0F 10 45 88              - movsd xmm0,[rbp-78]
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>220</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>178</ID>
      <Description>"Force Ghost Appearance"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(showghost,GameAssembly.dll,80 BB 90 00 00 00 00 0F 84 8C 00 00 00 F3) // should be unique
alloc(newmem,$1000,"GameAssembly.dll"+EB32A6)

label(code)
label(return)

newmem:

code:
  cmp byte ptr [rbx+00000090],01
  jmp return

showghost:
  jmp newmem
  nop 2
return:
registersymbol(showghost)

[DISABLE]

showghost:
  db 80 BB 90 00 00 00 00

unregistersymbol(showghost)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GameAssembly.dll"+D9FCE6

"GameAssembly.dll"+D9FCBD: 74 27                    -  je GameAssembly.dll+D9FCE6
"GameAssembly.dll"+D9FCBF: 48 8B 05 4A 03 A5 01     -  mov rax,[GameAssembly.dll+27F0010]
"GameAssembly.dll"+D9FCC6: 48 8B 90 B8 00 00 00     -  mov rdx,[rax+000000B8]
"GameAssembly.dll"+D9FCCD: 48 8B 02                 -  mov rax,[rdx]
"GameAssembly.dll"+D9FCD0: 48 85 C0                 -  test rax,rax
"GameAssembly.dll"+D9FCD3: 0F 84 B6 02 00 00        -  je GameAssembly.dll+D9FF8F
"GameAssembly.dll"+D9FCD9: 80 78 69 00              -  cmp byte ptr [rax+69],00
"GameAssembly.dll"+D9FCDD: 75 07                    -  jne GameAssembly.dll+D9FCE6
"GameAssembly.dll"+D9FCDF: 33 D2                    -  xor edx,edx
"GameAssembly.dll"+D9FCE1: E8 3A 2B 9F 00           -  call GameAssembly.dll+1792820
// ---------- INJECTING HERE ----------
"GameAssembly.dll"+D9FCE6: 80 BB 90 00 00 00 00     -  cmp byte ptr [rbx+00000090],00
// ---------- DONE INJECTING  ----------
"GameAssembly.dll"+D9FCED: 0F 84 F6 00 00 00        -  je GameAssembly.dll+D9FDE9
"GameAssembly.dll"+D9FCF3: F3 0F 10 B3 8C 00 00 00  -  movss xmm6,[rbx+0000008C]
"GameAssembly.dll"+D9FCFB: 33 C9                    -  xor ecx,ecx
"GameAssembly.dll"+D9FCFD: E8 1E 8C 7D 00           -  call GameAssembly.dll+1578920
"GameAssembly.dll"+D9FD02: F3 0F 5C F0              -  subss xmm6,xmm0
"GameAssembly.dll"+D9FD06: 0F 57 C0                 -  xorps xmm0,xmm0
"GameAssembly.dll"+D9FD09: 0F 2F C6                 -  comiss xmm0,xmm6
"GameAssembly.dll"+D9FD0C: F3 0F 11 B3 8C 00 00 00  -  movss [rbx+0000008C],xmm6
"GameAssembly.dll"+D9FD14: 0F 86 CF 00 00 00        -  jbe GameAssembly.dll+D9FDE9
"GameAssembly.dll"+D9FD1A: F3 0F 10 35 AE FE 20 01  -  movss xmm6,[GameAssembly.dll+1FAFBD0]
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
